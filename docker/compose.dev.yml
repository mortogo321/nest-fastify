name: nest-app

services:
  api:
    container_name: api
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: dev
    command: ["yarn", "start:dev"]
    restart: unless-stopped
    ports:
      - 8000:8000
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server:/app
      - ../server/apps/api/.env.dev:/app/apps/api/.env.app
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  auth:
    container_name: auth
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: dev
    command: ["yarn", "start:dev", "auth"]
    restart: unless-stopped
    ports:
      - 8001:8001
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server:/app
      - ../server/apps/auth/.env.dev:/app/apps/auth/.env.app
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  alert:
    container_name: alert
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: dev
    command: ["yarn", "start:dev", "alert"]
    restart: unless-stopped
    ports:
      - 8002:8002
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server:/app
      - ../server/apps/alert/.env.dev:/app/apps/alert/.env.app
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  payment:
    container_name: payment
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: dev
    command: ["yarn", "start:dev", "payment"]
    restart: unless-stopped
    ports:
      - 8003:8003
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server:/app
      - ../server/apps/payment/.env.dev:/app/apps/payment/.env.app
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  worker:
    container_name: worker
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: dev
    command: ["yarn", "start:dev", "worker"]
    restart: unless-stopped
    ports:
      - 8003:8003
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server:/app
      - ../server/apps/worker/.env.dev:/app/apps/worker/.env.app
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16.4-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - ../server/.env.dev
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 3s
      timeout: 3s
      retries: 10
    env_file:
      - ../server/.env.dev
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    restart: unless-stopped
    logging:
      driver: "none"
    ports:
      - 1025:1025
      - 8025:8025

networks:
  default:
    name: local

volumes:
  postgres-data:
  rabbitmq-data:
